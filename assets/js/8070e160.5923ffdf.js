(self.webpackChunkichnion_website=self.webpackChunkichnion_website||[]).push([[651],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(a),d=r,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7917:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var n=a(2122),r=a(9756),o=(a(7294),a(3905)),i={title:"Quickstart"},l={unversionedId:"quickstart",id:"quickstart",isDocsHomePage:!1,title:"Quickstart",description:"Excavator extracts and stores data from your personal data exports.",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/website/docs/quickstart",editUrl:"https://github.com/ichnion/website/edit/main/docs/quickstart.md",version:"current",lastUpdatedBy:"Daniel Kastl",lastUpdatedAt:1622432697,formattedLastUpdatedAt:"5/31/2021",frontMatter:{title:"Quickstart"},sidebar:"docs",previous:{title:"About",permalink:"/website/docs/about"},next:{title:"Join Us",permalink:"/website/docs/join"}},c=[{value:"Installing Excavator",id:"installing-excavator",children:[{value:"Compiling from source",id:"compiling-from-source",children:[]},{value:"Install from crates.io",id:"install-from-cratesio",children:[]},{value:"Install from Homebrew",id:"install-from-homebrew",children:[]}]},{value:"How to use Excavator",id:"how-to-use-excavator",children:[{value:"Prerequisite",id:"prerequisite",children:[]},{value:"Basic usage",id:"basic-usage",children:[]}]}],s={toc:c};function p(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Excavator extracts and stores data from your personal data exports."),(0,o.kt)("h2",{id:"installing-excavator"},"Installing Excavator"),(0,o.kt)("h3",{id:"compiling-from-source"},"Compiling from source"),(0,o.kt)("p",null,"You need to have a ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/cargo/appendix/glossary.html#package-manager"},"package manager")," called ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/cargo/"},"cargo")," in your local."),(0,o.kt)("p",null,"If you already have got ",(0,o.kt)("inlineCode",{parentName:"p"},"rustc")," installed in your local, you also have ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo")," installed locally."),(0,o.kt)("p",null,"And then you can install with this command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ cargo install --git https://github.com/ichnion/excavator --branch develop\n")),(0,o.kt)("h3",{id:"install-from-cratesio"},"Install from crates.io"),(0,o.kt)("p",null,"You can also install from package registry."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ cargo install excavator\n")),(0,o.kt)("h3",{id:"install-from-homebrew"},"Install from Homebrew"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ brew tap ichnion/tap\n$ brew install excavator\n")),(0,o.kt)("h2",{id:"how-to-use-excavator"},"How to use Excavator"),(0,o.kt)("h3",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("p",null,"Currently, we support ",(0,o.kt)("em",{parentName:"p"},"part of")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Google Takeout")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Facebook")," data."),(0,o.kt)("p",null,"You need to prepare the applicable data from ",(0,o.kt)("a",{parentName:"p",href:"https://takeout.google.com/settings/takeout"},"Google Takeout")," or ",(0,o.kt)("a",{parentName:"p",href:"https://www.facebook.com/help/972879969525875"},"Facebook"),"."),(0,o.kt)("p",null,"Supported files are below."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Google Takout"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"MyActivity.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"search-history.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"watch-history.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Location History.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Saved Place.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Semantic Location History.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'All the .json files from Google Fit "All Sessions".')))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Facebook"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"device_location.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"primary_location.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"primary_public_location.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"last_location.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"location_history.json"))))),(0,o.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,o.kt)("p",null,"Below is the basic example to use excavator. Which will recusively find the applicable file from ",(0,o.kt)("em",{parentName:"p"},"directory")," and extract the data."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"$ excavator read TakeOut")),(0,o.kt)("p",null,"Or you can specify the single file"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"$ excavator read Location History.json")),(0,o.kt)("p",null,"Then it will store the data into database."))}p.isMDXComponent=!0}}]);